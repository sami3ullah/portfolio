---
interface Props {
  text: string;
}

const { text } = Astro.props;
---

<button
  class="button button--surtur relative left-0 md:left-[calc(-1*(200px-160px))] md:bottom-[40px]"
>
  <svg class="textcircle w-[200px] md:w-[250px]" viewBox="0 0 500 500">
    <defs
      ><path
        id="textcircle"
        d="M250,400 a150,150 0 0,1 0,-300a150,150 0 0,1 0,300Z"></path></defs
    >
    <text
      ><textPath
        xlink:href="#textcircle"
        aria-label="Projects & client work 2020"
        textLength="900">{text}</textPath
      ></text
    >
  </svg>
  <svg
    aria-hidden="true"
    class="eye"
    width="70"
    height="70"
    viewBox="0 0 70 70"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      class="eye__outer"
      d="M10.5 35.308c5.227-7.98 14.248-13.252 24.5-13.252s19.273 5.271 24.5 13.252c-5.227 7.98-14.248 13.253-24.5 13.253s-19.273-5.272-24.5-13.253z"
    ></path>
    <path
      class="eye__lashes-up"
      d="M35 8.802v8.836M49.537 11.383l-3.31 8.192M20.522 11.684l3.31 8.192"
    ></path>
    <path
      class="eye__lashes-down"
      d="M35 61.818v-8.836 8.836zM49.537 59.237l-3.31-8.193 3.31 8.193zM20.522 58.936l3.31-8.193-3.31 8.193z"
    ></path>
    <circle class="eye__iris" cx="35" cy="35.31" r="5.221"></circle>
    <circle class="eye__inner" cx="35" cy="35.31" r="10.041"></circle>
  </svg>
</button>

<style>
  li.content__item::marker {
    display: none;
  }
  .button {
    position: relative;
    display: inline-block;
  }
  .button--surtur {
    position: relative;
    padding: 0;
    background: none;
    -webkit-clip-path: circle(40% at 50% 50%);
    clip-path: circle(40% at 50% 50%);
  }

  .button--surtur:focus-visible {
    background: #443ffc;
  }

  .textcircle {
    position: relative;
    display: block;
  }

  .textcircle text,
  .eye {
    font-size: 32px;
    text-transform: uppercase;
    fill: #888;
  }

  .textcircle textPath {
    letter-spacing: 17px; /* Firefox needs this */
  }

  .button--surtur .textcircle {
    animation: rotateIt 7s linear infinite;
  }

  .eye {
    position: absolute;
    z-index: 2;
    width: 60px;
    height: 60px;
    top: calc(50% - 30px);
    left: calc(50% - 30px);
  }

  .eye__outer,
  .eye__inner,
  .eye__lashes-up,
  .eye__lashes-down {
    stroke: #888;
    fill: none;
    stroke-width: 1.5px;
  }

  .eye__lashes-down {
    opacity: 0;
  }

  .button--surtur:hover .eye__lashes-up,
  .button--surtur:hover .eye__inner,
  .button--surtur:hover .eye__iris {
    animation: blinkHide 1.5s step-end infinite;
  }

  .button--surtur:hover .eye__lashes-down {
    animation: blinkShow 1.5s step-end infinite;
  }

  @keyframes rotateIt {
    to {
      transform: rotate(360deg);
    }
  }
  @keyframes blinkHide {
    0% {
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
  }

  @keyframes blinkShow {
    0% {
      opacity: 1;
    }
    10% {
      opacity: 0;
    }
  }
</style>
